mutate(lower = case_when(label == "alpha" ~ 0.1,
label == "coating" ~ 5,
label == "hSigma" ~ 0.01,
label == "K" ~ 500,
label == "kSigma" ~ 0.01,
label == "viscosity" ~ 8.9e-4)) %>%
mutate(upper = case_when(label == "alpha" ~ 1,
label == "coating" ~ 200,
label == "hSigma" ~ 0.5,
label == "K" ~ 12000,
label == "kSigma" ~ 0.5,
label == "viscosity" ~ 1.4))
# creat plan for experiments
plan <- FrF2(128, 5, factor.names = list(alpha = seq(0.1, 1, length.out = 5),
coating = seq(5, 200, length.out = 5)))
# creat plan for experiments
plan <- FrF2(128, 3, factor.names = list(alpha = seq(0.1, 1, length.out = 3),
coating = seq(5, 200, length.out = 3),
hSigma = seq(0.01, 0.5, length.out = 3)))
# creat plan for experiments
plan <- FrF2(128, 3, factor.names = list(alpha = seq(0.1, 1, length.out = 2),
coating = seq(5, 200, length.out = 2),
hSigma = seq(0.01, 0.5, length.out = 2)))
print(plan)
my.packages <- c("FrF2", "ggplot2", "dplyr", "tidyr", "viridis")
lapply(my.packages, require, character.only = TRUE)
# base color assignments
c1 <- viridis(2)[1]
c2 <- viridis(2)[2]
# default value assignment
alpha       <- 1        # Gilbert damping constant
coating     <- 50       # average hydrodynamic diameter [nm]
hSigma      <- 0.1      # size distribution parameter for hydrodynamic size
K           <- 5000     # uniaxial anisotropy constant [J/m^3]
kSigma      <- 0.1      # distribution parameter for anisotropy values
viscosity   <- 8.9e-4   # medium viscosity [Pa*s]
# assigment of upper and lower bounds for variables
label <- c("alpha", "coating", "hSigma", "K", "kSigma", "viscosity")
default <- c(alpha, coating, hSigma, K, kSigma, viscosity)
vals <- data.frame(label, default) %>%
mutate(lower = case_when(label == "alpha" ~ 0.1,
label == "coating" ~ 5,
label == "hSigma" ~ 0.01,
label == "K" ~ 500,
label == "kSigma" ~ 0.01,
label == "viscosity" ~ 8.9e-4)) %>%
mutate(upper = case_when(label == "alpha" ~ 1,
label == "coating" ~ 200,
label == "hSigma" ~ 0.5,
label == "K" ~ 12000,
label == "kSigma" ~ 0.5,
label == "viscosity" ~ 1.4))
# creat plan for experiments
plan <- FrF2(128, 6, factor.names = label, default.levels = c("low","high"))
print(plan)
# creat plan for experiments
plan <- FrF2(256, 6, factor.names = label, default.levels = c("low","high"))
plan <- select(-run.no.std.rp, -Blocks)
?select
# creat plan for experiments
plan <- FrF2(256, 6, factor.names = label, default.levels = c("low","high"))
plan <- select(plan, -run.no.std.rp, -Blocks)
plan
# creat plan for experiments
plan <- FrF2(256, 6, factor.names = label, default.levels = c("low","high"))
plan <- select(plan, run.no)
# creat plan for experiments
plan <- FrF2(256, 6, factor.names = label, default.levels = c("low","high"))
plan <- select(plan, alpha)
print(plan)
# creat plan for experiments
plan <- FrF2(256, 6, factor.names = label, default.levels = c("low","high"))
plan <- select(plan, -Blocks)
print(plan)
my.packages <- c("FrF2", "ggplot2", "dplyr", "tidyr", "viridis")
lapply(my.packages, require, character.only = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# base color assignments
c1 <- viridis(2)[1]
c2 <- viridis(2)[2]
# creat plan for experiments
plan <- FrF2(64, 6, factor.names = label, default.levels = c("low","high"))
# plan <- select(plan, -Blocks)
print(plan)
write.csv(plan, "plan.csv", row.names = FALSE)
# creat plan for experiments
plan <- FrF2(64, 6, factor.names = label, default.levels = c("low","high"))
# plan <- select(plan, -Blocks)
print(plan)
write.csv(plan, "plan.csv")
my.packages <- c("FrF2", "ggplot2", "dplyr", "tidyr", "viridis")
lapply(my.packages, require, character.only = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# base color assignments
c1 <- viridis(2)[1]
c2 <- viridis(2)[2]
# default value assignment
alpha       <- 1        # Gilbert damping constant
coating     <- 50       # average hydrodynamic diameter [nm]
hSigma      <- 0.1      # size distribution parameter for hydrodynamic size
K           <- 5000     # uniaxial anisotropy constant [J/m^3]
kSigma      <- 0.1      # distribution parameter for anisotropy values
viscosity   <- 8.9e-4   # medium viscosity [Pa*s]
# assigment of upper and lower bounds for variables
label <- c("alpha", "coating", "hSigma", "K", "kSigma", "viscosity")
default <- c(alpha, coating, hSigma, K, kSigma, viscosity)
vals <- data.frame(label, default) %>%
mutate(lower = case_when(label == "alpha" ~ 0.1,
label == "coating" ~ 5,
label == "hSigma" ~ 0.01,
label == "K" ~ 500,
label == "kSigma" ~ 0.01,
label == "viscosity" ~ 8.9e-4)) %>%
mutate(upper = case_when(label == "alpha" ~ 1,
label == "coating" ~ 200,
label == "hSigma" ~ 0.5,
label == "K" ~ 12000,
label == "kSigma" ~ 0.5,
label == "viscosity" ~ 1.4))
# creat plan for experiments
plan <- FrF2(64, 6, factor.names = label, default.levels = c("low","high"))
# plan <- select(plan, -Blocks)
print(plan)
write.csv(plan, "plan.csv")
plan <- plan %>%
mutate(alpha = case_when(alpha == "low" ~ 0.5, alpha == "high" ~ 1.0)) %>%
mutate(alpha = case_when(coating == "low" ~ 50, coating == "high" ~ 150)) %>%
mutate(alpha = case_when(hSigma == "low" ~ 0.05, hSigma == "high" ~ 0.2)) %>%
mutate(alpha = case_when(K == "low" ~ 2000, K == "high" ~ 8000)) %>%
mutate(alpha = case_when(kSigma == "low" ~ 0.05, kSigma == "high" ~ 0.2)) %>%
mutate(alpha = case_when(viscosity == "low" ~ 8.9e-4, viscosity == "high" ~ 8.9e-1))
print(plan)
my.packages <- c("FrF2", "ggplot2", "dplyr", "tidyr", "viridis")
lapply(my.packages, require, character.only = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# base color assignments
c1 <- viridis(2)[1]
c2 <- viridis(2)[2]
# default value assignment
alpha       <- 1        # Gilbert damping constant
coating     <- 50       # average hydrodynamic diameter [nm]
hSigma      <- 0.1      # size distribution parameter for hydrodynamic size
K           <- 5000     # uniaxial anisotropy constant [J/m^3]
kSigma      <- 0.1      # distribution parameter for anisotropy values
viscosity   <- 8.9e-4   # medium viscosity [Pa*s]
# assigment of upper and lower bounds for variables
label <- c("alpha", "coating", "hSigma", "K", "kSigma", "viscosity")
default <- c(alpha, coating, hSigma, K, kSigma, viscosity)
vals <- data.frame(label, default) %>%
mutate(lower = case_when(label == "alpha" ~ 0.1,
label == "coating" ~ 5,
label == "hSigma" ~ 0.01,
label == "K" ~ 500,
label == "kSigma" ~ 0.01,
label == "viscosity" ~ 8.9e-4)) %>%
mutate(upper = case_when(label == "alpha" ~ 1,
label == "coating" ~ 200,
label == "hSigma" ~ 0.5,
label == "K" ~ 12000,
label == "kSigma" ~ 0.5,
label == "viscosity" ~ 1.4))
# creat plan for experiments
plan <- FrF2(64, 6, factor.names = label, default.levels = c("low","high"))
# plan <- select(plan, -Blocks)
print(plan)
write.csv(plan, "plan.csv")
plan <- plan %>%
mutate(alpha = case_when(alpha == "low" ~ 0.5, alpha == "high" ~ 1.0)) %>%
mutate(coating = case_when(coating == "low" ~ 50, coating == "high" ~ 150)) %>%
mutate(hSigma = case_when(hSigma == "low" ~ 0.05, hSigma == "high" ~ 0.2)) %>%
mutate(K = case_when(K == "low" ~ 2000, K == "high" ~ 8000)) %>%
mutate(kSigma = case_when(kSigma == "low" ~ 0.05, kSigma == "high" ~ 0.2)) %>%
mutate(viscosity = case_when(viscosity == "low" ~ 8.9e-4, viscosity == "high" ~ 8.9e-1))
print(plan)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot.function(x, 0, 5)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x <- xi + vi * (t - ti) + (1/2) * a * (t - ti)^2
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
?layer
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/18-19 Year 6/PHYS 117 121 [TA]/kinematic-equations.R', echo=TRUE)
visc.calc <- function(T,mass_fraction) {
glycerolDen = (1273.3-0.6121*T)/1000              #Density of Glycerol (g/cm3)
waterDen = (1-(((abs(T-4))/622)^1.7))     #Density of water (g/cm3)
##Andreas Volk polynomial method
contraction_av = 1 - ((3.520E-8 * (mass_fraction * 100)))^3 + (1.027E-6 * (mass_fraction * 100))^2 + 2.5E-4 * (mass_fraction * 100) - 1.691E-4
contraction = 1 + contraction_av / 100
glycerolVisc = 0.001 * 12100 * exp((-1233 + T) * T / (9900 + 70 * T))
waterVisc = 0.001 * 1.790 * exp((-1230 - T) * T / (36100 + 360 * T))
a = 0.705 - 0.0017 * T
b = (4.9 + 0.036 * T) * a^2.5
alpha = 1 - mass_fraction + (a * b * mass_fraction * (1 - mass_fraction)) / (a * mass_fraction + b * (1 - mass_fraction))
A = log(waterVisc / glycerolVisc)
viscosity_mix = glycerolVisc * exp(A * alpha)
return(viscosity_mix)
}
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/2x/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/2x/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/2x/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/2x/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/dipole-interactions.R', echo=TRUE)
setwd("/Users/ericteeman/Google Drive/Research/Data/TEM/EMSL JEOL LHe/Cell Internalization/HT-1080/2X/1-260/B2S6D_20160916/separations/csv")
list.files(pattern=".csv",
full.names = T,
recursive = T)
df <- gdata::combine(df1,df2)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
df
df1
df2
View(df1)
View(df)
View(df2)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
View(df)
df.hst
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
View(data.test)
df$dist_1[source == "df1"]
df$dist_1
df$dist_1[source == "df1"]
set.test1 <- dplyr::filter(df$, source == "df1")
set.test1 <- dplyr::filter(df$dist_1, source == "df1")
?write.csv
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/1X/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/2X/dipole-interactions.R', echo=TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df1 <- read.csv("/Users/ericteeman/Google Drive/Research/Data/Code/Simulation/dipole-interactions/1X/hist.csv")
df2 <- read.csv("/Users/ericteeman/Google Drive/Research/Data/Code/Simulation/dipole-interactions/2X/hist.csv")
df <- gdata::combine(df1,df2)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
p.hist = ggplot(df)+
theme_new() +
scale_x_log10(breaks = c(20, 50, 100, 200), limits = c(15,120)) +
# scale_fill_viridis(name = expression(paste("Z"["c-c"]," [nm]")), discrete = TRUE) +
annotation_logticks(sides = "b") +
labs(x = xlab, y = ylab) +
geom_histogram(aes(x = distances, y = ..density..,
group = interaction(as.character(distz),source),
file = interaction(as.character(distz),source)),
stat = "identity",
na.rm = TRUE,
color = "black",
width = log(1.009))
plot(df)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
df
mean(df$distances)
?mean
sd(df$distances)
?geom_vline
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
mean(df$distances)
sd(df$distances)
sd(df$distances[source == 134])
sd(df$distances[source == "134"])
sd(df$distances[source < 237])
df$distances
df
mean(dplyr::filter(df, source == "134")$distances}
mean(dplyr::filter(df, source == "134")$distances)
mean(dplyr::filter(df, source == "238")$distances)
sd(dplyr::filter(df, source == "134")$distances)
sd(dplyr::filter(df, source == "238")$distances)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/dipole-interactions/combined/dipole-interactions.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
setwd("/Users/ericteeman/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/")
d1 <-
read.csv(
"/Users/ericteeman/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.csv",
header = TRUE
)
d1 = d1 %>%
mutate(time = formatC(time, width=2, flag="0"))
d1$pgFe.cell = as.numeric(gsub(",","",d1$pgFe.cell))
d1 = d1%>%
mutate(pgFe.cell = pgFe.cell/1000) %>%
mutate(std.dev = std.dev/1000) %>%
mutate(ugFe.well = ugFe.well*1000/55.845/1000/0.1) %>%
mutate(ugFe.well = round(ugFe.well,0))
dat
d1
d1 <-
read.csv(
"/Users/ericteeman/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.csv",
header = TRUE
)
d1 = d1 %>%
mutate(time = formatC(time, width=2, flag="0"))
d1$pgFe.cell = as.numeric(gsub(",","",d1$pgFe.cell))
d1 = d1%>%
mutate(pgFe.cell = pgFe.cell/1000) %>%
mutate(std.dev = std.dev/1000) %>%
mutate(ugFe.well = ugFe.well*1000/55.845/1000) %>%
mutate(ugFe.well = round(ugFe.well,0))
d1
d1 <-
read.csv(
"/Users/ericteeman/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.csv",
header = TRUE
)
d1 = d1 %>%
mutate(time = formatC(time, width=2, flag="0"))
d1$pgFe.cell = as.numeric(gsub(",","",d1$pgFe.cell))
d1 = d1%>%
mutate(pgFe.cell = pgFe.cell/1000) %>%
mutate(std.dev = std.dev/1000) %>%
mutate(ugFe.well = ugFe.well*1000/55.845/1000) %>%
mutate(ugFe.well = round(ugFe.well,1))
scientific_10 <- function(x) {
ifelse(x%%1 == 0,
parse(text = gsub("e+00", "", scientific_format()(x))),
ifelse(x < 1 & x > 0.11,
as.numeric(as.character(x)),
parse(text = gsub("e", "%*% 10^", scientific_format()(x))))
)
}
d1
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
?scale_fill_viridis
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
viridis(3)[2]
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
source('~/Google Drive/Research/Data/ICP/Nanoparticle Uptake Quantification by ICP/From Google Sheet.R', echo=TRUE)
setwd("/Users/ericteeman/Google Drive/Research/Data/Absorbance/Resazurin")
d1 <-
read.csv(
"/Users/ericteeman/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.csv",
header = TRUE
)
d1 <- d1 %>%
mutate(alive = alive*100) %>%
mutate(error = error*100) %>%
mutate(ugFe.well = ugFe.well*1000/55.845/1000/0.1) %>%
mutate(ugFe.well = round(ugFe.well,1))
d1
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
d1
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/Absorbance/Resazurin/20170313 HT-1080 Resazurin Assay.R', echo=TRUE)
source('~/Google Drive/Research/Data/MPS/Notebook 3/3-136/Final/3-136.R', echo=TRUE)
source('~/Google Drive/Research/Data/MPS/Notebook 3/3-136/Final/3-136.R', echo=TRUE)
source('~/Google Drive/Research/Data/MPS/Notebook 3/3-136/Final/3-136.R', echo=TRUE)
source('~/Google Drive/Research/Data/MPS/Improving in vitro MPS/Glycerol Curve/Glycerol Curve.R', echo=TRUE)
source('~/Google Drive/Research/Data/MPS/Improving in vitro MPS/Mannitol Curve/Mannitol Curve.R', echo=TRUE)
source('~/Google Drive/Research/Data/MPS/Improving in vitro MPS/Glycerol Curve/Glycerol Curve.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/icp-oes/icp-oes.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/icp-oes/icp-oes.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/icp-oes/icp-oes.R', echo=TRUE)
source('~/Google Drive/Research/Data/Code/Simulation/icp-oes/icp-oes.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/17-18 Year 5/MSE 333 [TA]/Homeworks/HW 2/Key/Homework 2.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/17-18 Year 5/MSE 333 [TA]/Homeworks/HW 2/Key/Homework 2.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/17-18 Year 5/MSE 333 [TA]/Homeworks/HW 2/Key/Homework 2.R', echo=TRUE)
source('~/Google Drive/Education/Graduate/17-18 Year 5/MSE 333 [TA]/Homeworks/HW 2/Key/Homework 2.R', echo=TRUE)
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
dat
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
dat
typeof(dat)
typeof(as.list(dat))
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
install.packages("svglite")
source('~/GitHub/tem-process/tem-process.R', echo=TRUE)
